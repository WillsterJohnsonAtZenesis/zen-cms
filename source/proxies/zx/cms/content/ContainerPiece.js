/**
 * This proxy class is generated by `zx.io.remote.proxy.ClassWriter` and should not be edited manually
 * because it will be overwritten.
 *
 * To regenerate, use `zx create-proxies`, and the CMS server will automatically do the same during startup.
 *
 * Copyright and License - this file is copyright and licensed under the terms provided by the copyright owner, 
 * which presumably match the owner and license terms of the original source file.  It is your responsibility 
 * to determine ownership and terms.
 *

  
 * @use(qx.data.Array)
  


  
 * @require(zx.io.persistence.anno.Property)
  
 * @require(zx.io.remote.anno.Property)
  
 * @require(zx.io.persistence.anno.Array)
  

 */
qx.Class.define("zx.cms.content.ContainerPiece", {
  extend: zx.cms.content.Piece,
  
    include: [ zx.cms.content.MContainerPiece ],
  

  construct(...vargs) {
    this.base(arguments, ...vargs);
    zx.io.remote.NetworkEndpoint.initialiseRemoteClass(zx.cms.content.ContainerPiece);
  },

  properties: {
    
      orientation: {
         init: "vertical", 
        
           check: ["horizontal","vertical","flow"], 
          nullable: false,
           event: "changeOrientation", 
           apply: "_applyOrientation", 
          
        
        "@": [new zx.io.persistence.anno.Property(), new zx.io.remote.anno.Property()]
      },
    
      pieces: {
        
        
           check: "qx.data.Array", 
          nullable: false,
           event: "changePieces", 
           apply: "_applyPieces", 
           transform: "__transformPieces__P_90_0", 
        
        "@": [new zx.io.persistence.anno.Property().set({ "embed": true }), new zx.io.remote.anno.Property(), new zx.io.persistence.anno.Array().set({ "arrayType": zx.cms.content.Piece })]
      },
    
      cssClass: {
         init: "", 
        
           check: "String", 
          nullable: false,
           event: "changeCssClass", 
           apply: "_applyCssClass", 
          
        
        "@": [new zx.io.persistence.anno.Property(), new zx.io.remote.anno.Property()]
      },
    
      layout: {
         init: null, 
        
           check: "String", 
          nullable: true,
           event: "changeLayout", 
           apply: "_applyLayout", 
          
        
        "@": [new zx.io.persistence.anno.Property(), new zx.io.remote.anno.Property()]
      },
    
  },

  members: {
    
      _applyOrientation(value, oldValue) {
        // Nothing - to be overridden
      },
    
      _applyPieces(value, oldValue) {
        // Nothing - to be overridden
      },
    
      _applyCssClass(value, oldValue) {
        // Nothing - to be overridden
      },
    
      _applyLayout(value, oldValue) {
        // Nothing - to be overridden
      },
    

    
      

      
        __transformPieces__P_90_0(value, oldValue) {
        if (oldValue) {
          oldValue.replace(value ? value : []);
          return oldValue;
        }

        return value;
      },
      
    
  }
});
